BufferAssignment:
allocation 0: size 512, thread-local:
 value: <2 add.7 @0> (size=512,offset=0): f32[]{:T(128)}
allocation 1: size 335544320, parameter 0, shape |f32[4,4096,5120]| at ShapeIndex {}:
 value: <3 Arg_0.1 @0> (size=335544320,offset=0): f32[4,4096,5120]{2,1,0:T(8,128)}
allocation 2: size 512, output shape is |f32[]|, maybe-live-out:
 value: <5 reduce.8 @0> (size=512,offset=0): f32[]{:T(128)}
 value: <7 multiply @0> (size=512,offset=0): f32[]{:T(128)}
allocation 3: size 512, constant:
 value: <4 constant.3 @0> (size=512,offset=0): f32[]{:T(128)}
allocation 4: size 512, constant:
 value: <6 constant @0> (size=512,offset=0): f32[]{:T(128)}
allocation 5: size 512, thread-local:
 value: <0 Arg_0.5 @0> (size=512,offset=0): f32[]{:T(128)}
allocation 6: size 512, thread-local:
 value: <1 Arg_1.6 @0> (size=512,offset=0): f32[]{:T(128)}
allocation 7: size 0, color 1, preallocated-temp:

Total bytes used: 335547392 (320.00MiB)

Used values:
<0 Arg_0.5 @0>
 positions:
  Arg_0.5
 uses:
  add.7, operand 0
 from instruction: %Arg_0.5 = f32[]{:T(128)} parameter(0), metadata={op_name="jit(_mean)/jit(main)/reduce_sum[axes=(0, 1, 2)]"}<1 Arg_1.6 @0>
 positions:
  Arg_1.6
 uses:
  add.7, operand 1
 from instruction: %Arg_1.6 = f32[]{:T(128)} parameter(1), metadata={op_name="jit(_mean)/jit(main)/reduce_sum[axes=(0, 1, 2)]"}<2 add.7 @0>
 positions:
  add.7
 uses:
 from instruction: %add.7 = f32[]{:T(128)} add(f32[]{:T(128)} %Arg_0.5, f32[]{:T(128)} %Arg_1.6), metadata={op_name="jit(_mean)/jit(main)/reduce_sum[axes=(0, 1, 2)]" source_file="/tmp/ipykernel_2702310/3404187330.py" source_line=10}<3 Arg_0.1 @0>
 positions:
  Arg_0.1
 uses:
  reduce.8, operand 0
 from instruction: %Arg_0.1 = f32[4,4096,5120]{2,1,0:T(8,128)} parameter(0)<4 constant.3 @0>
 positions:
  constant.3
 uses:
  reduce.8, operand 1
 from instruction: %constant.3 = f32[]{:T(128)} constant(0)<5 reduce.8 @0>
 positions:
  reduce.8
 uses:
  multiply, operand 0
 from instruction: %reduce.8 = f32[]{:T(128)} reduce(f32[4,4096,5120]{2,1,0:T(8,128)} %Arg_0.1, f32[]{:T(128)} %constant.3), dimensions={0,1,2}, to_apply=%region_0.4, metadata={op_name="jit(_mean)/jit(main)/reduce_sum[axes=(0, 1, 2)]" source_file="/tmp/ipykernel_2702310/3404187330.py" source_line=10}<6 constant @0>
 positions:
  constant
 uses:
  multiply, operand 1
 from instruction: %constant = f32[]{:T(128)} constant(1.19209291e-08)<7 multiply @0>
 positions:
  multiply
 uses:
 from instruction: %multiply = f32[]{:T(128)} multiply(f32[]{:T(128)} %reduce.8, f32[]{:T(128)} %constant), metadata={op_name="jit(_mean)/jit(main)/div" source_file="/tmp/ipykernel_2702310/3404187330.py" source_line=10}

HloLiveRange (max 5):
  InstructionSequence:
    0:constant
    1:constant.3
    2:Arg_0.1
    3:reduce.8
    4:multiply
  BufferLiveRange:
    Arg_0.1{}:0-5
    constant.3{}:1-3
    reduce.8{}:3-4
    constant{}:0-4
    multiply{}:4-5
  Live ranges at 4 (peak):
    Arg_0.1: 335544320 bytes
    reduce.8: 4 bytes
    constant: 4 bytes
    multiply: 4 bytes
