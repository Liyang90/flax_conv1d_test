BufferAssignment:
allocation 0: size 32, output shape is |(f32[], f32[])|, maybe-live-out:
 value: <6 tuple.5{} @0> (size=32,offset=0): (f32[]{:T(128)}, f32[]{:T(128)})
allocation 1: size 512, maybe-live-out:
 value: <4 convert.3 @0> (size=512,offset=0): f32[]{:T(128)}
allocation 2: size 512, maybe-live-out:
 value: <5 multiply.4 @0> (size=512,offset=0): f32[]{:T(128)}
allocation 3: size 512, parameter 0, shape |f32[]| at ShapeIndex {}:
 value: <0 Arg_0.1 @0> (size=512,offset=0): f32[]{:T(128)}
allocation 4: size 512, parameter 1, shape |s32[]| at ShapeIndex {}:
 value: <2 Arg_1.2 @0> (size=512,offset=0): s32[]{:T(128)}
allocation 5: size 0, color 1, preallocated-temp:
allocation 6: size 512, color 6, preallocated-temp:
 value: <1 copy @6> (size=512,offset=0): f32[]{:T(128)S(6)}
 value: <3 copy.1 @6> (size=512,offset=0): s32[]{:T(128)S(6)}

Total bytes used: 2592 (2.5KiB)

Used values:
<0 Arg_0.1 @0>
 positions:
  Arg_0.1
 uses:
  copy, operand 0
 from instruction: %Arg_0.1 = f32[]{:T(128)} parameter(0)<1 copy @6>
 positions:
  copy
 uses:
  multiply.4, operand 0
 from instruction: %copy = f32[]{:T(128)S(6)} copy(f32[]{:T(128)} %Arg_0.1)<2 Arg_1.2 @0>
 positions:
  Arg_1.2
 uses:
  copy.1, operand 0
 from instruction: %Arg_1.2 = s32[]{:T(128)} parameter(1)<3 copy.1 @6>
 positions:
  copy.1
 uses:
  convert.3, operand 0
 from instruction: %copy.1 = s32[]{:T(128)S(6)} copy(s32[]{:T(128)} %Arg_1.2)<4 convert.3 @0>
 positions:
  convert.3
  tuple.5 {1}
 uses:
  multiply.4, operand 1
  tuple.5, operand 1
 from instruction: %convert.3 = f32[]{:T(128)} convert(s32[]{:T(128)S(6)} %copy.1), metadata={op_name="jit(multiply)/jit(main)/convert_element_type[new_dtype=float32 weak_type=False sharding=None]" source_file="/tmp/ipykernel_2702310/3404187330.py" source_line=10}<5 multiply.4 @0>
 positions:
  multiply.4
  tuple.5 {0}
 uses:
  tuple.5, operand 0
 from instruction: %multiply.4 = f32[]{:T(128)} multiply(f32[]{:T(128)S(6)} %copy, f32[]{:T(128)} %convert.3), metadata={op_name="jit(multiply)/jit(main)/mul" source_file="/tmp/ipykernel_2702310/3404187330.py" source_line=10}<6 tuple.5{} @0>
 positions:
  tuple.5 {}
 uses:
 from instruction: %tuple.5 = (f32[]{:T(128)}, f32[]{:T(128)}) tuple(f32[]{:T(128)} %multiply.4, f32[]{:T(128)} %convert.3)

HloLiveRange (max 7):
  InstructionSequence:
    0:Arg_1.2
    1:Arg_0.1
    2:copy.1
    3:convert.3
    4:copy
    5:multiply.4
    6:tuple.5
  BufferLiveRange:
    Arg_0.1{}:0-7
    copy{}:4-5
    Arg_1.2{}:0-7
    copy.1{}:2-3
    convert.3{}:3-7
    multiply.4{}:5-7
    tuple.5{}:6-7
  Live ranges at 6 (peak):
    Arg_0.1: 4 bytes
    Arg_1.2: 4 bytes
    convert.3: 4 bytes
    multiply.4: 4 bytes
    tuple.5: 16 bytes
