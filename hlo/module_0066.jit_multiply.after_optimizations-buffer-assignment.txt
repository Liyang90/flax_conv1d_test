BufferAssignment:
allocation 0: size 512, parameter 0, shape |f32[]| at ShapeIndex {}:
 value: <2 Arg_0.1 @0> (size=512,offset=0): f32[]{:T(128)}
allocation 1: size 512, output shape is |f32[]|, maybe-live-out:
 value: <4 multiply.3 @0> (size=512,offset=0): f32[]{:T(128)}
allocation 2: size 512, parameter 1, shape |f32[]| at ShapeIndex {}:
 value: <0 Arg_1.2 @0> (size=512,offset=0): f32[]{:T(128)}
allocation 3: size 0, color 1, preallocated-temp:
allocation 4: size 1024, color 6, preallocated-temp:
 value: <1 copy.1 @6> (size=512,offset=0): f32[]{:T(128)S(6)}
 value: <3 copy @6> (size=512,offset=512): f32[]{:T(128)S(6)}

Total bytes used: 2560 (2.5KiB)

Used values:
<0 Arg_1.2 @0>
 positions:
  Arg_1.2
 uses:
  copy.1, operand 0
 from instruction: %Arg_1.2 = f32[]{:T(128)} parameter(1)<1 copy.1 @6>
 positions:
  copy.1
 uses:
  multiply.3, operand 0
 from instruction: %copy.1 = f32[]{:T(128)S(6)} copy(f32[]{:T(128)} %Arg_1.2)<2 Arg_0.1 @0>
 positions:
  Arg_0.1
 uses:
  copy, operand 0
 from instruction: %Arg_0.1 = f32[]{:T(128)} parameter(0)<3 copy @6>
 positions:
  copy
 uses:
  multiply.3, operand 1
 from instruction: %copy = f32[]{:T(128)S(6)} copy(f32[]{:T(128)} %Arg_0.1)<4 multiply.3 @0>
 positions:
  multiply.3
 uses:
 from instruction: %multiply.3 = f32[]{:T(128)} multiply(f32[]{:T(128)S(6)} %copy.1, f32[]{:T(128)S(6)} %copy), metadata={op_name="jit(multiply)/jit(main)/mul" source_file="/tmp/ipykernel_2702310/3404187330.py" source_line=10}

HloLiveRange (max 5):
  InstructionSequence:
    0:Arg_1.2
    1:Arg_0.1
    2:copy.1
    3:copy
    4:multiply.3
  BufferLiveRange:
    Arg_1.2{}:0-5
    copy.1{}:2-4
    Arg_0.1{}:0-5
    copy{}:3-4
    multiply.3{}:4-5
  Live ranges at 4 (peak):
    Arg_1.2: 4 bytes
    copy.1: 4 bytes
    Arg_0.1: 4 bytes
    copy: 4 bytes
    multiply.3: 4 bytes
